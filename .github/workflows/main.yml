name: Packaging

on:
  - push

jobs:
  format:
    name: Run formatter
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v3
        with:
          python-version: "3.10"

      - run: |
          python -m pip install tox
          tox -e format

  lint:
    name: Run linter
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v3
        with:
          python-version: "3.10"

      - run: |
          python -m pip install tox
          tox -e lint

  typecheck:
    name: Run typechecker
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v3
        with:
          python-version: "3.10"

      - run: |
          python -m pip install tox
          tox -e typecheck

  test:
    name: Test
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python:
          - version: "3.10"
            toxenv: "py310"
          - version: "3.9"
            toxenv: "py39"

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python.version }}

      - name: Install tox
        run: python -m pip install tox

      - name: Run pytest
        run: tox -e ${{ matrix.python.toxenv }}

  build_source_dist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v3
        with:
          python-version: "3.10"

      - name: Install build
        run: python -m pip install build

      - name: Run build
        run: python -m build --sdist

      - uses: actions/upload-artifact@v3
        with:
          path: dist/*.tar.gz

  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    if: startsWith(github.event.ref, 'refs/tags/v')
    needs:
      - format
      - lint
      - typecheck
      - test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04, windows-2019, macOS-10.15]

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v3
        with:
          python-version: "3.10"

      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel==2.3.1

      - name: Build wheels
        run: python -m cibuildwheel --output-dir wheels
        env:
          CIBW_BUILD: cp310-*_x86_64 cp310-win_amd64

      - uses: actions/upload-artifact@v3
        with:
          path: wheels/*.whl

  publish:
    name: Publish package
    if: startsWith(github.event.ref, 'refs/tags/v')
    needs:
      - build_source_dist
      - build_wheels
    runs-on: ubuntu-latest

    steps:
      - uses: actions/download-artifact@v3
        with:
          name: artifact
          path: dist

      - uses: pypa/gh-action-pypi-publish@v1.5.0
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
